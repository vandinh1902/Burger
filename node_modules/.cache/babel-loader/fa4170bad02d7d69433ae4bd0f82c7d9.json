{"ast":null,"code":"import { ADD_BREADMID } from '../constants/burgerContants';\nconst burgerState = {\n  burger: {\n    salad: 1,\n    cheese: 1,\n    beef: 1\n  },\n  // [{name:'salad',amount:1},{name:'cheese',amount:1},{name:'beef',amount:1}]\n  menu: {\n    salad: 10,\n    cheese: 20,\n    beef: 55\n  },\n  total: 85\n};\nexport const burgerReduce = (state = burgerState, action) => {\n  switch (action.type) {\n    case ADD_BREADMID:\n      {\n        // console.log(action)\n        // // let {propsBurger, amount} = action.payload;\n        // // Thay doi so luong\n        // if(action.payload.value === -1 && state.burger[action.payload.propsBurger] < 1){\n        //   return{...state}\n        // }\n        // let burgerUpdate = {...state.burger};\n        // burgerUpdate[action.payload.propsBurger] += action.payload.value;\n        // state.burger = burgerUpdate;\n        // state.total += action.payload.value * state.menu[action.payload.propsBurger];\n        // return{...state,burgerUpdate}\n        // console.log(action)\n        let {\n          propsBurger,\n          amount\n        } = action; // Thay doi so luong\n\n        if (amount === -1 && state.burger[propsBurger] < 1) {\n          return { ...state\n          };\n        }\n\n        let burgerUpdate = { ...state.burger\n        };\n        burgerUpdate[propsBurger] += amount;\n        state.burger = burgerUpdate;\n        state.total += amount * state.menu[propsBurger];\n        return { ...state\n        };\n      }\n  }\n};","map":{"version":3,"sources":["C:/Users/DinhNgo/Desktop/burgerrdux/src/redux/reducers/burgerReduce.js"],"names":["ADD_BREADMID","burgerState","burger","salad","cheese","beef","menu","total","burgerReduce","state","action","type","propsBurger","amount","burgerUpdate"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,6BAA3B;AACA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,MAAM,EAAE,CAApB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GADQ;AAC0B;AAC1CC,EAAAA,IAAI,EAAE;AACJH,IAAAA,KAAK,EAAE,EADH;AAGJC,IAAAA,MAAM,EAAE,EAHJ;AAKJC,IAAAA,IAAI,EAAE;AALF,GAFU;AAUhBE,EAAAA,KAAK,EAAE;AAVS,CAApB;AAeA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGR,WAAT,EAAqBS,MAArB,KAAgC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,YAAL;AAAkB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AACF,YAAI;AAACY,UAAAA,WAAD;AAAcC,UAAAA;AAAd,YAAwBH,MAA5B,CAlBkB,CAmBlB;;AACA,YAAGG,MAAM,KAAK,CAAC,CAAZ,IAAiBJ,KAAK,CAACP,MAAN,CAAaU,WAAb,IAA4B,CAAhD,EAAkD;AAChD,iBAAM,EAAC,GAAGH;AAAJ,WAAN;AACD;;AACD,YAAIK,YAAY,GAAG,EAAC,GAAGL,KAAK,CAACP;AAAV,SAAnB;AACAY,QAAAA,YAAY,CAACF,WAAD,CAAZ,IAA6BC,MAA7B;AACAJ,QAAAA,KAAK,CAACP,MAAN,GAAeY,YAAf;AAEAL,QAAAA,KAAK,CAACF,KAAN,IAAeM,MAAM,GAAGJ,KAAK,CAACH,IAAN,CAAWM,WAAX,CAAxB;AAEA,eAAM,EAAC,GAAGH;AAAJ,SAAN;AACC;AA/BH;AAkCD,CAnCI","sourcesContent":["import {ADD_BREADMID} from '../constants/burgerContants'\r\nconst burgerState = {\r\n    burger: { salad: 1, cheese: 1, beef: 1 }, // [{name:'salad',amount:1},{name:'cheese',amount:1},{name:'beef',amount:1}]\r\n    menu: {\r\n      salad: 10,\r\n  \r\n      cheese: 20,\r\n  \r\n      beef: 55,\r\n    },\r\n  \r\n    total: 85,\r\n  };\r\n  \r\n  \r\n  \r\nexport const burgerReduce = (state = burgerState,action) => {\r\n    switch (action.type) {\r\n      case ADD_BREADMID:{\r\n        // console.log(action)\r\n        // // let {propsBurger, amount} = action.payload;\r\n        // // Thay doi so luong\r\n        // if(action.payload.value === -1 && state.burger[action.payload.propsBurger] < 1){\r\n        //   return{...state}\r\n        // }\r\n        // let burgerUpdate = {...state.burger};\r\n        // burgerUpdate[action.payload.propsBurger] += action.payload.value;\r\n        // state.burger = burgerUpdate;\r\n  \r\n        // state.total += action.payload.value * state.menu[action.payload.propsBurger];\r\n  \r\n        // return{...state,burgerUpdate}\r\n\r\n\r\n\r\n        // console.log(action)\r\n      let {propsBurger, amount} = action;\r\n      // Thay doi so luong\r\n      if(amount === -1 && state.burger[propsBurger] < 1){\r\n        return{...state}\r\n      }\r\n      let burgerUpdate = {...state.burger};\r\n      burgerUpdate[propsBurger] += amount;\r\n      state.burger = burgerUpdate;\r\n\r\n      state.total += amount * state.menu[propsBurger];\r\n\r\n      return{...state};\r\n      }\r\n    }\r\n    \r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}