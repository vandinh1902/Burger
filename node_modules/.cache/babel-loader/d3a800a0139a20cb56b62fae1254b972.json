{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DinhNgo\\\\Desktop\\\\burgerrdux\\\\src\\\\Burger\\\\AddBurger.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addBreadMid } from '../redux/actions/burgerAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddBurger() {\n  _s();\n\n  const renderMenu = () => {\n    let {\n      menu,\n      burger\n    } = this.props;\n    return Object.entries(menu).map(([propsMenu, price], index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: propsMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.props.addBreadMid(propsMenu, 1);\n            },\n            className: \"btn btn-success mr-3\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 17\n          }, this), burger[propsMenu], /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.props.addBreadMid(propsMenu, -1);\n            },\n            className: \"btn btn-danger ml-3 mr-3\",\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: burger[propsMenu] * price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this);\n    });\n  };\n\n  const dispatch = useDispatch();\n\n  const handleAddburger = () => {\n    dispatch(addBreadMid(propsBurger, amount));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddburger(propsMenu, 1),\n        className: \"btn btn-success mr-3\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), burger[propsMenu], /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddburger(propsMenu, -1),\n        className: \"btn btn-danger ml-3 mr-3\",\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddBurger, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddBurger;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBurger\");","map":{"version":3,"sources":["C:/Users/DinhNgo/Desktop/burgerrdux/src/Burger/AddBurger.js"],"names":["React","useState","useDispatch","addBreadMid","AddBurger","renderMenu","menu","burger","props","Object","entries","map","propsMenu","price","index","dispatch","handleAddburger","propsBurger","amount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,QAA0B,+BAA1B;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAMC,UAAU,GAAG,MAAM;AACrB,QAAI;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKC,KAA5B;AACA,WAAOC,MAAM,CAACC,OAAP,CAAeJ,IAAf,EAAqBK,GAArB,CAAyB,CAAC,CAACC,SAAD,EAAYC,KAAZ,CAAD,EAAqBC,KAArB,KAA+B;AAC7D,0BACE;AAAA,gCACE;AAAA,oBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCACE;AAAQ,YAAA,OAAO,EAAE,MAAM;AAAC,mBAAKJ,KAAL,CAAWL,WAAX,CAAuBS,SAAvB,EAAiC,CAAjC;AAAoC,aAA5D;AAA8D,YAAA,SAAS,EAAC,sBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGL,MAAM,CAACK,SAAD,CAFT,eAGE;AAAQ,YAAA,OAAO,EAAE,MAAM;AAAC,mBAAKJ,KAAL,CAAWL,WAAX,CAAuBS,SAAvB,EAAiC,CAAC,CAAlC;AAAqC,aAA7D;AAA+D,YAAA,SAAS,EAAC,0BAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAA,oBAAKN,MAAM,CAACK,SAAD,CAAN,GAAoBC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,SAASC,KAAT;AAAA;AAAA;AAAA;AAAA,cADF;AAcD,KAfM,CAAP;AAgBH,GAlBD;;AAmBA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;;AACA,QAAMc,eAAe,GAAG,MAAM;AAC1BD,IAAAA,QAAQ,CAACZ,WAAW,CAACc,WAAD,EAAaC,MAAb,CAAZ,CAAR;AACH,GAFD;;AAGA,sBACI;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEF,eAAe,CAACJ,SAAD,EAAY,CAAZ,CAAhC;AAAgD,QAAA,SAAS,EAAC,sBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGL,MAAM,CAACK,SAAD,CAFT,eAGE;AAAQ,QAAA,OAAO,EAAEI,eAAe,CAACJ,SAAD,EAAY,CAAC,CAAb,CAAhC;AAAiD,QAAA,SAAS,EAAC,0BAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAtCuBR,S;UAoBHF,W;;;KApBGE,S","sourcesContent":["import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {addBreadMid} from '../redux/actions/burgerAction'\r\n\r\nexport default function AddBurger() {\r\n    const renderMenu = () => {\r\n        let { menu, burger } = this.props;\r\n        return Object.entries(menu).map(([propsMenu, price], index) => {\r\n          return (\r\n            <tr key={index}>\r\n              <td>{propsMenu}</td>\r\n              <td>\r\n                <button onClick={() => {this.props.addBreadMid(propsMenu,1)}} className=\"btn btn-success mr-3\">+</button>\r\n                {burger[propsMenu]}\r\n                <button onClick={() => {this.props.addBreadMid(propsMenu,-1)}} className=\"btn btn-danger ml-3 mr-3\">-</button>\r\n    \r\n              </td>\r\n              <td>{price}</td>\r\n              <td>{burger[propsMenu] * price}</td>\r\n    \r\n            </tr>\r\n          );\r\n        });\r\n    }\r\n    const dispatch = useDispatch();\r\n    const handleAddburger = () => {\r\n        dispatch(addBreadMid(propsBurger,amount))\r\n    }\r\n    return (\r\n        <tr >\r\n          <td></td>\r\n          <td>\r\n            <button onClick={handleAddburger(propsMenu, 1)} className=\"btn btn-success mr-3\">+</button>\r\n            {burger[propsMenu]}\r\n            <button onClick={handleAddburger(propsMenu, -1)} className=\"btn btn-danger ml-3 mr-3\">-</button>\r\n\r\n          </td>\r\n          <td></td>\r\n          <td></td>\r\n\r\n        </tr>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}